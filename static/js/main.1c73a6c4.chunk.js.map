{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","components/Navigation.js","routes/Detail.js","App.js","index.js"],"names":["About","className","Movie","title","year","summary","poster","genres","to","pathname","state","src","alt","map","genre","index","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","id","React","Component","Navigation","Detail","props","console","log","location","history","undefined","push","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"ySAYeA,MATf,WACE,OACE,sBAAKC,UAAU,mBAAf,UACE,iEACA,6G,gFC6BSC,MA/Bf,YAA0D,IAAzCC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC7C,OACE,qBAAKN,UAAU,QAAf,SACE,eAAC,IAAD,CAAMO,GAAI,CAAEC,SAAU,gBAAiBC,MAAO,CAAEP,QAAOC,OAAMC,UAASC,SAAQC,WAA9E,UAEA,qBAAKI,IAAKL,EAAQM,IAAKT,IACvB,sBAAKF,UAAU,aAAf,UACE,oBAAIA,UAAU,cAAd,SAA6BE,IAC7B,oBAAIF,UAAU,aAAd,SAA4BG,IAC5B,oBAAIH,UAAU,eAAd,SACGM,EAAOM,KAAI,SAACC,EAAOC,GAClB,OACE,oBAAgBd,UAAU,cAA1B,SAAyCa,GAAhCC,QAIf,oBAAGd,UAAU,gBAAb,UAA8BI,EAAQW,MAAM,EAAG,KAA/C,kBC+COC,G,kNA5DbP,MAAQ,CACNQ,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAMAC,IAAMC,IAAI,4DANV,gBAIEJ,EAJF,EAGRK,KACEA,KAAQL,OAIZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IARzB,2C,uDAaZ,WACEQ,KAAKN,c,oBAIP,WAAU,IAAD,EACuBM,KAAKhB,MAA3BQ,EADD,EACCA,UAAWC,EADZ,EACYA,OAMnB,OACI,yBAASlB,UAAU,YAAnB,SACIiB,EAEE,qBAAKjB,UAAU,SAAf,SACE,sBAAMA,UAAU,cAAhB,uBAMF,qBAAKA,UAAU,SAAf,SACEkB,EAAON,KAAI,SAAAc,GAAK,OAChB,cAAC,EAAD,CAGEvB,KAAMuB,EAAMvB,KACZD,MAAOwB,EAAMxB,MACbE,QAASsB,EAAMtB,QACfC,OAAQqB,EAAMC,mBACdrB,OAAQoB,EAAMpB,QANToB,EAAME,e,GA7CVC,IAAMC,Y,MCMTC,MAThB,WACE,OACE,sBAAK/B,UAAU,MAAf,UACE,cAAC,IAAD,CAAMO,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,uBCwBSyB,E,kDA7BZ,WAAYC,GAAQ,IAAD,6BAClB,cAAMA,GACNC,QAAQC,IAAI,EAAKF,OAFC,E,qDAQpB,WAAqB,IAAD,EACYR,KAAKQ,MAA3BG,EADU,EACVA,SAAUC,EADA,EACAA,aACKC,IAAnBF,EAAS3B,OACX4B,EAAQE,KAAK,O,oBAMjB,WAAU,IACAH,EAAaX,KAAKQ,MAAlBG,SACR,OAAIA,EAAS3B,MAGX,8BAAM2B,EAAS3B,MAAMP,QAEd,S,GAzBQ2B,IAAMC,WCsBZU,MAdf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAW3B,IACxC,cAAC,IAAD,CAAOyB,KAAK,SAASE,UAAW5C,IAChC,cAAC,IAAD,CAAO0C,KAAK,gBAAgBE,UAAWX,QCZ7CY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1c73a6c4.chunk.js","sourcesContent":["import React from 'react';\r\nimport './About.css';\r\n\r\nfunction About() {\r\n  return (\r\n    <div className=\"about__container\">\r\n      <p>하이 도트니!</p>\r\n      <p>게임 좀 그만해. 게임 금지야.</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./Movie.css\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Movie({ title, year, summary, poster, genres }) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <Link to={{ pathname: '/movie-detail', state: { title, year, summary, poster, genres } }}>\r\n      {/* state:에 파라미터를 받는다 */}\r\n      <img src={poster} alt={title} />\r\n      <div className=\"movie_data\">\r\n        <h3 className=\"movie_title\">{title}</h3>\r\n        <h5 className=\"movie_year\">{year}</h5>\r\n        <ul className=\"movie_genres\">\r\n          {genres.map((genre, index) => {\r\n            return (\r\n              <li key={index} className=\"movie_genre\">{genre}</li>\r\n            );\r\n          })}\r\n        </ul>\r\n        <p className=\"movie_summary\">{summary.slice(0, 180)}...</p>\r\n      </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Movie;","import React from 'react';\r\nimport axios from 'axios';\r\nimport Movie from '../components/Movie';\r\nimport \"./Home.css\";\r\n\r\n// https://yts-proxy.now.sh/list_movies.json\r\n\r\nclass Home extends React.Component {  \r\n  state = {\r\n    isLoading: true, // flag var.\r\n    movies: [],\r\n  }\r\n\r\n  getMovies = async () => {\r\n    // 구조분해할당 : 구조만 같을 뿐 실제로 할당되는 것은 name이 아닌 value이다.\r\n    const {\r\n      data: {\r\n        data: { movies },\r\n      },\r\n    } = await axios.get('https://yts-proxy.now.sh/list_movies.json?sort_by=rating');\r\n    // await가 실행완료 되고 난후 setState 실행.\r\n    this.setState({ movies, isLoading: false });\r\n    //console.log(movies);\r\n    // movies : name과 value가 동일한 이름일 때 단축속성 사용 가능, (= movies: movies)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getMovies();\r\n  }\r\n  // render()이후 실행되는 componentDidMount()에 setState 실행.\r\n  \r\n  render() {\r\n    const { isLoading, movies } = this.state;\r\n    /**\r\n     * 구조분해할당\r\n     * state 객체의 'isLoading value'를 상응하는 'isLoading'변수에 대입한다. \r\n     * movies에는 배열이 대입되고 아래에 map()함수로 처리된다.\r\n     */\r\n    return(\r\n        <section className=\"container\">\r\n          { isLoading \r\n            ? (\r\n              <div className=\"loader\">\r\n                <span className=\"loader_text\">Loading</span>\r\n              </div>\r\n            ) : (\r\n          // console.log(movie);\r\n          // movies에는 api로 불러온 movies배열\r\n          // import된 Movie로 값을 넘겨주고 컴포넌트 반환 \r\n              <div className=\"movies\">\r\n              { movies.map(movie => (\r\n                <Movie\r\n                  key={movie.id}\r\n                  //id={movie.id}\r\n                  year={movie.year}\r\n                  title={movie.title}\r\n                  summary={movie.summary}\r\n                  poster={movie.medium_cover_image}\r\n                  genres={movie.genres}//장르(배열)\r\n                />\r\n              )) }\r\n            </div>\r\n            )}\r\n        </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\nfunction Navigation() { \r\n  return (\r\n    <div className=\"nav\">\r\n      <Link to=\"/\">Home</Link>\r\n      <Link to=\"/about\">About</Link>\r\n    </div>\r\n  )\r\n }\r\n\r\n export default Navigation;","import React from 'react';\r\n\r\nclass Detail extends React.Component {\r\n   constructor(props) {\r\n    super(props);\r\n    console.log(this.props);\r\n  } \r\n  /*\r\n  props는 Link 에서 보내는 props.\r\n  */\r\n  \r\n  componentDidMount() {\r\n    const { location, history } = this.props;\r\n    if (location.state === undefined) {\r\n      history.push('/');\r\n      // location 객체 전체 ...\r\n      // history 객체 전체 ...\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { location } = this.props;\r\n    if (location.state) {\r\n      // 새로고침으로 인해 state에 값이 없을때...\r\n    return (\r\n      <div>{location.state.title}</div>\r\n    );} else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Detail;","import React from 'react';\r\nimport \"./App.css\";\r\nimport { HashRouter, Route } from 'react-router-dom';\r\nimport About from './routes/About';\r\nimport Home from './routes/Home';\r\nimport Navigation from './components/Navigation';\r\nimport Detail from './routes/Detail';\r\n\r\n// https://yts-proxy.now.sh/list_movies.json\r\n\r\nfunction App() {   \r\n  return (\r\n    <HashRouter>\r\n      <Navigation />\r\n      <Route path=\"/\" exact={true} component={Home}/>\r\n      <Route path=\"/about\" component={About}/>\r\n      <Route path=\"/movie-detail\" component={Detail}/>\r\n    </HashRouter>\r\n    /**\r\n     *  \"/about\": Path Props, {About}: import Component \r\n     */\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}